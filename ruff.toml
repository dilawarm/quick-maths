lint.select = [
    # Enable flake8-comprehensions rules
    "C",
    # Enable pydocstyle rules
    "D",
    # Enable pycodestyle errors/warning rules
    "E","W",
    # Enable pyflakes rules
    "F",
    # Enable pandas-vet rules
    "PD",
    # Enable perflint rules
    "PERF",
    # Enable pylint rules
    "PL",
    # Enable ruff-specific rules
    "RUF",
    # Enable pyupgrade rules
    "UP",
    # Enable isort rules
    "I",
]
lint.ignore = [
    # Do not mandate docstrings
    "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107", "D400", "D415",
    # Disable some rules that are mutually exclusive with others
    "D203", "D212",
    # Do not apply rules about docstring wording or formatting
    "D205", "D401", "D404",
    "E501",
    "C901",
    "PLR0911",
    "PLR0912",
    "PLR0913",
    "PLR0915",
    "PLW2901",
    "RUF015",
    "UP007",  # This doesn't work in older Python versions
    "PD901",
    "PERF203",
    "PERF401",
    "PLR2004",
    "E402",
    "RUF001",
    "W291",
    "W293",
    "RUF003",
    "F821",
    "C403",
    "PLE2502",
    "D417",
    "C414",
    "PLC0206",  # fix me
]
# Allow fix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["ALL"]
lint.unfixable = []
#unsafe-fixes = true

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "venv",
]
# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py311"
output-format = "full"
line-length = 160

[lint.per-file-ignores]
# Allow unused imports in __init__.py files
# These are run when the containing package is imported and so it's ok for them to be unused in the package itself
"__init__.py" = ["F401"]
"tests/*" = ["PLR2004"]
